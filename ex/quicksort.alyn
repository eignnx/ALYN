
subr quicksort(arr: *int, len: nat) {
    quicksort_impl(arr, 0, len);
}

// MEMORY:
// ..., *, *, [*, *, *, *, *, *], *, *, *, ...
//             ^arr==arr+lo       ^arr+hi
subr quicksort_impl(arr: *int, lo: nat, hi: nat) {
    if hi <= lo { ret; }
    let mid = lo + (hi - lo) >> 1;
    swap(arr, lo, mid); // swap pivot to front
    let pivot = *(arr + mid);

    let split = partition(arr, lo, hi, pivot);

    quicksort_impl(arr, lo, split);
    quicksort_impl(arr, split, hi);
}

extern subr swap(arr: *int, i: nat, j: nat);
extern subr partition(arr: *int, lo: nat, hi: nat, pivot: int) nat;
